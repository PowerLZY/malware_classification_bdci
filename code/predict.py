import warnings
import pandas as pd
from code.model import *
from code.features import *

warnings.filterwarnings('ignore')


def submit_result(inter_path, result_path):
    """ Generate the final result file to be submit. """
    result_np = np.load(f"{result_path}/result.npy")
    with open(f"{inter_path}/test_filename.txt", 'r') as fp:
        test_filename = fp.read().split()
    result = pd.DataFrame()
    result['filename'] = test_filename
    fam_cols = ['family_' + str(i) for i in range(10)]
    result[fam_cols] = result_np
    result.to_csv(f"{result_path}/result.csv", index=False)


data_path = '../data/raw_data'
inter_path = '../data/user_data'
result_path = '../data/prediction_result'

# Feature engineering for features only generated by pe file in byte-format
test_pe_path = f"{data_path}/test/pe"
pe_objs = [ByteHistogram(), ByteEntropyHistogram(), StringExtractor()]
for obj in pe_objs:
    feature_engineering(obj, test_pe_path, inter_path)

# Feature engineering for features only generated by asm file in string-format
test_asm_path = f"{data_path}/test/asm"
asm_objs = [SectionInfo(), ImportsInfo(), ExportsInfo()]
for obj in asm_objs:
    feature_engineering(obj, test_asm_path, inter_path)

# Feature fusion
fused_label = 'ember'
features = ['histogram', 'byteentropy', 'strings']
arr = []
for f in features:
    arr.append(np.load(f"{inter_path}/test_{f}.npy"))
np.save(f"{inter_path}/test_{fused_label}.npy", np.hstack(arr).astype(np.float32))

# Feature selection
test_fea_path = f"{inter_path}/test_{fused_label}.npy"
test_X = np.load(test_fea_path)
selector_path = f"{inter_path}/feature_selector.pkl"
selector = joblib.load(selector_path)
test_X_r = selector.transform(test_X)
np.save(test_fea_path, test_X_r)

# Model predict
labels = []
for label in labels:
    clf = Model(label)
    test_fea_path = f"{inter_path}/test_{label}.npy"
    test_X = np.load(test_fea_path)
    test_y = clf.Predict(test_X)

# Model ensemble
# TO BE ADDED...
# Output file should be 'result.npy'

# Submit result
submit_result(inter_path, result_path)
