#!/usr/bin/env python
# -*- encoding: utf-8 -*-
'''
@File    :   feature_engineering.py    
@Contact :   3289218653@qq.com
@License :   (C)Copyright 2021-2022 PowerLZY

@Modify Time      @Author           @Version    @Desciption
------------      -------           --------    -----------
2021-10-04 17:17   PowerLZY&yuan_mes  1.0         None
'''
import warnings
import pandas as pd
from code.model import *
from code.features import *
from code.utils import *
from tqdm import tqdm
from xgboost import XGBClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_selection import SelectFromModel

if __name__ == '__main__':

    data_path = '../data/raw_data'
    inter_path = '../data/user_data'
    train_pe_path = f"{data_path}/train/pe"
    train_asm_path = f"{data_path}/train/asm"

    fix_file_index(data_path, inter_path)

    # Feature engineering for features only generated by pe file in byte-format
    pe_objs = [ByteHistogram(), ByteEntropyHistogram(), StringExtractor()]
    for obj in pe_objs:
        feature_engineering(obj, train_pe_path, inter_path)

    # Feature engineering for features only generated by asm file in string-format
    asm_objs = [SectionInfo(), ImportsInfo(), ExportsInfo()]
    for obj in asm_objs:
        feature_engineering(obj, train_asm_path, inter_path)

    # Feature engineering for features transformed by tf-idf
    feature_tfidf(StringExtractor(), train_pe_path, inter_path)
    feature_tfidf(OpcodeInfo(), train_asm_path, inter_path)

