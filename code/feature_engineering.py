#!/usr/bin/env python
# -*- encoding: utf-8 -*-
"""
@File    :   feature_engineering.py
@Contact :   3289218653@qq.com
@License :   (C)Copyright 2021-2022 PowerLZY

@Modify Time      @Author           @Version    @Desciption
------------      -------           --------    -----------
2021-10-04 17:17   PowerLZY&yuan_mes  1.0         None
"""
import sys
import os

from code.model import *
from code.features import *
from code.utils import *


def feature_engineering(data_type, data_path, inter_path):
    # data_path = '../data/raw_data'
    # data_type = "train"
    # inter_path = '../data/user_data'

    pe_path = f"{data_path}/{data_type}/pe"
    asm_path = f"{data_path}/{data_type}/asm"

    if data_type == 'train':
        fix_file_index(data_path, inter_path)

        # ------------------------ words&ins ------------------------
        model_tfidf(StringExtractor(), pe_path, inter_path)
        model_tfidf(OpcodeInfo(), asm_path, inter_path, stop_words=[';'], ngram_range=(1, 3))

        # ------------------------ semantic ------------------------
        feature_asm2txt(asm_path, inter_path)

    else:  # data_type == 'test'
        # ------------------------ words&ins ------------------------
        feature_tfidf_np('words', inter_path, max_features=300)
        feature_tfidf_np('ins', inter_path, max_features=1000)

    pe_objs = [ByteHistogram(), ByteEntropyHistogram(), StringExtractor()]
    for obj in pe_objs:
        feature_engine(obj, pe_path, inter_path)

    asm_objs = [SectionInfo(), ImportsInfo(), ExportsInfo()]
    for obj in asm_objs:
        feature_engine(obj, asm_path, inter_path)

    # ------------------------ semantic ------------------------
    feature_asm2vec(data_type, inter_path)  # data_type

    # TODO 特征融合 'ember_section_ins_words', 'ember_section_ins_semantic'
