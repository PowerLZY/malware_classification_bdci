#!/usr/bin/env python
# -*- encoding: utf-8 -*-
'''
@File    :   features.py
@Contact :   3289218653@qq.com
@License :   (C)Copyright 2021-2022 PowerLZY

@Modify Time      @Author           @Version    @Desciption
------------      -------           --------    -----------
2021-10-04 17:17   PowerLZY&yuan_mes  1.0       程序入口函数
'''

from codes.train import *
from codes.predict import *


def train_func(inter_path, data_path):
	""" Training code."""
	feature_list = ['ember', 'section', 'imports', 'exports', 'words_1000', 'semantic',
					'ember_section_ins_words', 'ember_section_ins_semantic']

	feature_engineering("train", data_path, inter_path)
	train_data_dict = load_data('train', feature_list, inter_path)

	train_lab_path = f"{inter_path}/train_y.npy"
	train_y = np.load(train_lab_path)

	train_model(train_data_dict, train_y, inter_path)


def test_func(inter_path, data_path):
	""" Predicting code."""

	feature_engineering("test", data_path, inter_path)

	print("------------------------ 开始预测 ------------------------")
	# ------------------------ result1 ------------------------
	feature_list1 = ['ember', 'section', 'imports', 'exports']
	result1 = predict_result(feature_list1, inter_path)
	# submit_result(inter_path, result1, "result1")
	# ------------------------ result2 ------------------------
	feature_list2 = ['section', 'exports', 'ember_section_ins_words', 'ember_section_ins_semantic']
	result2 = predict_result(feature_list2, inter_path)
	# submit_result(inter_path, result2, "result2")
	# ------------------------ result2 ------------------------
	feature_list3 = ['section', 'exports', 'words_1000', 'ember_section_ins_semantic']
	result3 = predict_result(feature_list3, inter_path)
	# submit_result(inter_path, result3, "result3")
	# ------------------------ result2 ------------------------
	feature_list4 = ['section', 'exports', 'words_1000', 'semantic']
	result4 = predict_result(feature_list4, inter_path)
	# submit_result(inter_path, result4, "result4")
	print("------------------------ 预测完成 ------------------------")

	# Model ensemble
	result_np = (result1 + result2 + result3 + result4) / 4

	# Submit result
	submit_result(inter_path, result_np, "result")
	print("------------------------ 结果提交 ------------------------")


if __name__ == '__main__':

	data_path = '../data/raw_data'
	inter_path = '../data/user_data'

	train_func(inter_path, data_path)
	test_func(inter_path, data_path)

